{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","auth","getAuth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","db","getFirestore","storage","getStorage","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","src","alt","width","height","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","fileInput","useRef","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","current","maxLength","accept","theFile","files","undefined","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","displayName","newDisplayName","setNewDisplayName","history","useHistory","length","updateProfile","location","reload","where","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30c6da43.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const auth = getAuth();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create newAccount\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        // log in\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nconst Auth = () => {\r\n  const auth = getAuth();\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(auth, provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { getFirestore, doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getStorage, deleteObject, ref } from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const db = getFirestore();\r\n  const storage = getStorage();\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(db, `tweets/${tweetObj.id}`));\r\n      if (tweetObj.attachmentUrl !== \"\")\r\n        await deleteObject(ref(storage, tweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(db, `tweets/${tweetObj.id}`), { text: newTweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newTweet} required />\r\n            <input type=\"submit\" value=\"Update Tweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && (\r\n            <img\r\n              src={tweetObj.attachmentUrl}\r\n              alt=\"attachedtImg\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Tweet</button>\r\n              <button onClick={toggleEditing}>Edit Tweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import { useRef, useState } from \"react\";\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const db = getFirestore();\r\n  const storage = getStorage();\r\n  const fileInput = useRef();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n\r\n    await addDoc(collection(db, \"tweets\"), {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    if (theFile === undefined) {\r\n      fileInput.current.value = \"\";\r\n      setAttachment(\"\");\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={tweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        ref={fileInput}\r\n      />\r\n      <input type=\"submit\" value=\"Tweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} alt=\"attachedtImg\" width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"tweets\"), orderBy(\"createdAt\", \"desc\"));\r\n    onSnapshot(q, (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setTweets(newArray);\r\n    });\r\n  }, [db]);\r\n\r\n  return (\r\n    <>\r\n      <TweetFactory userObj={userObj} />\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  getFirestore,\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport { getAuth, signOut, updateProfile } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Tweet from \"components/Tweet\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const db = getFirestore();\r\n  const auth = getAuth();\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(auth);\r\n    history.push(\"/\");\r\n    // <Redirect from=\"*\" to=\"/\" />\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName && newDisplayName.length !== 0) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, \"tweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    onSnapshot(q, (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setTweets(newArray);\r\n    });\r\n  }, [db, userObj.uid]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">\r\n            {userObj !== null ? userObj.displayName : \"\"}의 Profile\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\ninitializeApp(firebaseConfig);\r\n\r\nfunction App() {\r\n  const auth = getAuth();\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUserObj(user);\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [auth]);\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} />\r\n      ) : (\r\n        \"initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}