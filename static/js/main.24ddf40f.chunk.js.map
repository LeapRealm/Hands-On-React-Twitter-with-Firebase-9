{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","auth","getAuth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","db","getFirestore","storage","getStorage","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","alt","width","height","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","fileInput","useRef","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","current","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","displayName","newDisplayName","setNewDisplayName","history","useHistory","length","updateProfile","location","reload","where","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","App","init","setInit","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24ddf40f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const auth = getAuth();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create newAccount\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        // log in\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nconst Auth = () => {\r\n  const auth = getAuth();\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    await signInWithPopup(auth, provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { getFirestore, doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getStorage, deleteObject, ref } from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const db = getFirestore();\r\n  const storage = getStorage();\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(db, `tweets/${tweetObj.id}`));\r\n      if (tweetObj.attachmentUrl !== \"\")\r\n        await deleteObject(ref(storage, tweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(db, `tweets/${tweetObj.id}`), { text: newTweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newTweet}\r\n              required\r\n              placeholder=\"Edit your tweet\"\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && (\r\n            <img\r\n              src={tweetObj.attachmentUrl}\r\n              alt=\"attachedtImg\"\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"tweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import { useRef, useState } from \"react\";\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const db = getFirestore();\r\n  const storage = getStorage();\r\n  const fileInput = useRef();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (tweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n\r\n    await addDoc(collection(db, \"tweets\"), {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        ref={fileInput}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt=\"attachedtImg\"\r\n            style={{ backgroundImage: attachment }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  const db = getFirestore();\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"tweets\"), orderBy(\"createdAt\", \"desc\"));\r\n    onSnapshot(q, (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setTweets(newArray);\r\n    });\r\n  }, [db]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  getFirestore,\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport { getAuth, signOut, updateProfile } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Tweet from \"components/Tweet\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const db = getFirestore();\r\n  const auth = getAuth();\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(auth);\r\n    history.push(\"/\");\r\n    // <Redirect from=\"*\" to=\"/\" />\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName && newDisplayName.length !== 0) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, \"tweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    onSnapshot(q, (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setTweets(newArray);\r\n    });\r\n  }, [db, userObj.uid]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n      <div style={{ marginTop: 50 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} />\r\n              </Route>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\ninitializeApp(firebaseConfig);\r\n\r\nfunction App() {\r\n  const auth = getAuth();\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUserObj(user);\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [auth]);\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} />\r\n      ) : (\r\n        \"initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}